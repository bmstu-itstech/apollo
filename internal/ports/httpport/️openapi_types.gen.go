// Package httpport provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package httpport

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Department Description of the department
type Department struct {
	// Code Short name of the department
	Code string `json:"code"`

	// Id Unique department number
	Id int `json:"id"`

	// Name Full name of the department
	Name string `json:"name"`
}

// Departments defines model for Departments.
type Departments = []Department

// Discipline Description of the discipline taught in the BMSTU
type Discipline struct {
	// Id Unique discipline number
	Id int `json:"id"`

	// Name Full name of the discipline
	Name string `json:"name"`
}

// Disciplines defines model for Disciplines.
type Disciplines = []Discipline

// Error Error description
type Error struct {
	Message string `json:"message"`
}

// Material Educational material as a unit of information storage in Apollo
type Material struct {
	// Author Telegram is the username of the author if is not anonymous
	Author *string `json:"author,omitempty"`

	// CreatedAt Time and date of creation of the material
	CreatedAt time.Time `json:"created_at"`

	// DepartmentId ID of the department that teaches the discipline the material belongs to. The same discipline can be taught in different departments.
	DepartmentId int `json:"department_id"`

	// Description Optional description of the content of the material
	Description *string `json:"description,omitempty"`

	// DisciplineId ID of the discipline the material belongs to
	DisciplineId int `json:"discipline_id"`

	// Name Human-readable name of the material
	Name string `json:"name"`

	// Url Resource URL
	Url string `json:"url"`

	// Uuid Uniquely identify material
	Uuid openapi_types.UUID `json:"uuid"`

	// Views Number of GET requests for the material
	Views int `json:"views"`
}

// Materials defines model for Materials.
type Materials = []Material

// PutMaterial Body of the PUT request to create educational material
type PutMaterial struct {
	// Author Telegram is the username of the author if is not anonymous
	Author *string `json:"author,omitempty"`

	// CreatedAt Time and date of creation of the material
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// DepartmentId ID of the department that teaches the discipline the material belongs to. The same discipline can be taught in different departments
	DepartmentId int `json:"department_id"`

	// Description Optional description of the content of the material
	Description *string `json:"description,omitempty"`

	// DisciplineId ID of the discipline the material belongs to
	DisciplineId int `json:"discipline_id"`

	// Name Human-readable name of the material
	Name string `json:"name"`

	// Url Resource URL
	Url string `json:"url"`

	// Uuid Uniquely identify material
	Uuid openapi_types.UUID `json:"uuid"`

	// Views Number of GET requests for the material
	Views *int `json:"views,omitempty"`
}

// GetMaterialsParams defines parameters for GetMaterials.
type GetMaterialsParams struct {
	// DisciplineId Discipline ID of the material.
	DisciplineId *int `form:"discipline_id,omitempty" json:"discipline_id,omitempty"`
}

// PutMaterialJSONRequestBody defines body for PutMaterial for application/json ContentType.
type PutMaterialJSONRequestBody = PutMaterial
